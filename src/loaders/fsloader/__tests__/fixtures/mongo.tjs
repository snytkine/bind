"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorators_1 = require("../../../decorators");
const logger_1 = require("./logger");
let Mongo = class Mongo {
    constructor(settings) {
        this.settings = settings;
    }
    hi(message) {
        return 'Hello from Mongo';
    }
    hello() {
        return 'HELLO COMPONENT';
    }
    getLogger() {
        return this.logger;
    }
    connect() {
        return new Promise((resolve) => {
            this.logger = new logger_1.default();
            resolve(true);
        });
    }
};
__decorate([
    decorators_1.Component('hello'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], Mongo.prototype, "hello", null);
__decorate([
    decorators_1.Component('mylogger'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", logger_1.default)
], Mongo.prototype, "getLogger", null);
__decorate([
    decorators_1.PostConstruct,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], Mongo.prototype, "connect", null);
Mongo = __decorate([
    decorators_1.Component('mongo'),
    __param(0, decorators_1.Inject('settings')),
    __metadata("design:paramtypes", [Object])
], Mongo);
exports.Mongo = Mongo;
//# sourceMappingURL=mongo.js.map
