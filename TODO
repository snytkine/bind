Try to create factory provided dependency named with "any" for class
Then inject it as UNNAMED injection into constructor
See if it works. There is a check in inject.ts around line 199 if (!injectClassName) {... throw
I think that may be a mistake, but maybe not a mistake.


TODO also try to setup parent class with ctor injection and child class with ctor injection
See how it works when ctor deps override ctor deps from parent.
- Allow @Inject as method param. In this case scope limitations will not apply.


TODO Fix EnvOverride implementation
it does not work with @Component decorator
if it's added above @Component then the actual component is not found in container
and dependencies on that component are failing, even for named component
If it's added below @Component then component is found but component's own prop dependency
is not set when component is created. Probably because the class being returned by @EnvOverride is different
and getComponentDependencies checks dependencies on sub-class and its failing.


